Scenario(Hello Service):
  description: a service says hello
  interactions:
    - description: send request to hello service without parameter
      request:
        method: GET
        url: /hello
      response:
        text: Hello World # response text must be "Hello World"
    - description: send request to hello servcie with parameter specified
      request:
        method: GET
        url: /hello?who=ActFramework
      response:
        # this time we demonstrate how to verify text with a list of verifiers
        text:
          - eq: Hello ActFramework # value must be equal to "Hello ActFramework"
          - contains: ActFramework # value must contains "ActFramework"
          - starts: Hello # value must starts with "Hello"
          - ends: Framework # value must ends with "Framework"
    - description: send request to hello servcie with parameter specified and require JSON response
      request:
        accept: json # specify accept type is application/json
        method: GET
        url: /hello?who=Java
      response:
        json: # treat result as a JSON object
          # act returns json result in `{"result": ...}` style
          result: Hello Java # result property of the JSON object must be "Hello World"

# Test Service#date() endpoint, which is available at `GET /date` endpoint
Scenario(Date Service):
  description: A service returns an important date in the history
  interactions:
    - description: send request to the service
      request:
        method: GET
        url: /date
      response:
        text:
          - after: 1997-05-11 # the returned date should be after date 1997-05-11
          - before: 13/May/2018 # the returned date should be before date 13/May/2018
    - description: send request to the service and request response be JSON format
      request:
        accept: json
        method: GET
        url: /date
      response:
        json: # treat result as a JSON object
          # act returns json result in `{"result": ...}` style
          result:  # thus we will use `result` to fetch the date
            - after: 1997-05-11 # the returned date should be after date 1997-05-11
            - before: 13/May/2018 # the returned date should be before date 13/May/2018

Scenario(Int Array Service):
  interactions:
    - description: request [1, 2, 3] via GET
      request:
        accept: json
        method: GET
        url: /array/int?start=1&end=4
      response:
        json:
          size: 3
          0: 1
          1: 2
          2: 3